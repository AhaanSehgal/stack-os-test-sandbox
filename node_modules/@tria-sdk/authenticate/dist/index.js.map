{"version":3,"sources":["../src/index.tsx","../src/NavContext.tsx","../src/connect/utils/constants.ts","../src/connect/controllers/iframe.controller.ts","../src/Components/TriaWalletButton.tsx","../src/Components/WalletCloseButton.tsx","../src/hooks/useContractWrite.tsx","../src/utils/shared.ts","../src/hooks/useSendTransaction.tsx","../src/hooks/useSignMessage.tsx","../src/hooks/useContractRead.tsx"],"sourcesContent":["//@ts-nocheck\nimport React, {useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Home from \"./Pages/Home\";\nimport ConfirmEmail from \"./Pages/ConfirmEmail\";\nimport SignUp from \"./Pages/SignUp/EmailPage\";\nimport PasswordPage from \"./Pages/SignUp/SignUpPassword\";\nimport SignInPassword from \"./Pages/SignIn/SignInPassword\";\nimport SignUpPassword from \"./Pages/SignUp/SignUpPassword\";\nimport Welcome from \"./Pages/WelcomePage/Welcome\";\nimport Onboarding from \"./Pages/Onboarding\";\nimport ConnectWallet from \"./Pages/ConnectWallet\";\nimport ConnectingAnimation from \"./Pages/ConnectWallet/ConnectingAnimation\";\nimport CreateWallet from \"./Pages/CreateWallet\";\nimport SignUpPasswordConfirm from \"./Pages/SignUp/SignUpPasswordConfirm\";\nimport LoaderPage from \"./Pages/Loader\";\n\n// import { configureChains, createConfig, WagmiConfig } from \"wagmi\";\n// import {\n//   mainnet,\n//   polygon,\n//   optimism,\n//   arbitrum,\n//   base,\n//   zora,\n//   goerli,\n// } from \"wagmi/chains\";\n// import { publicProvider } from \"wagmi/providers/public\";\n// import { MetaMaskConnector } from \"wagmi/connectors/metaMask\";\n// import { WalletConnectConnector } from \"wagmi/connectors/walletConnect\";\n// import { CoinbaseWalletConnector } from \"wagmi/connectors/coinbaseWallet\";\nimport \"./index.css\";\nimport NavContext from \"./NavContext\";\nimport { IframeController } from \"./connect/controllers/iframe.controller\";\nimport { UserController, AuthController } from '@tria-sdk/core';\nimport { TriaWalletButton } from \"./Components/TriaWalletButton\";\nimport WalletCloseButton from \"./Components/WalletCloseButton\";\nimport { useAccount } from \"@tria-sdk/connect\";\n// import { useAccount } from '@tria-sdk/connect'\n// import {useSignMessage} from \"./hooks/useSignMessage\";\n// import {useSendTransaction} from \"./hooks/useSendTransaction\";\n// import {useContractWrite} from \"./hooks/useContractWrite\";\n\nexport {useSignMessage,useSendTransaction,useContractWrite,useContractRead} from \"./hooks\"\n\n// export {useSignMessage,useSendTransaction,useContractWrite};\n\nwindow.Buffer = window.Buffer || require(\"buffer\").Buffer;\n\n// const { chains, publicClient, webSocketPublicClient } = configureChains(\n//   [\n//     mainnet,\n//     polygon,\n//     optimism,\n//     arbitrum,\n//     base,\n//     zora,\n//     ...(process.env.REACT_APP_ENABLE_TESTNETS === \"true\" ? [goerli] : []),\n//   ],\n//   [publicProvider()]\n// );\n\n// export const getDefaultWallets = ({ appName, projectId, chains }) => {\n//   // Set up connectors\n//   const connectors = [\n//     new CoinbaseWalletConnector({\n//       chains,\n//       options: {\n//         appName,\n//         shimDisconnect: true,\n//       },\n//     }),\n//     new WalletConnectConnector({\n//       chains,\n//       options: {\n//         projectId,\n//         qrcode: true,\n//         shimDisconnect: true,\n//       },\n//     }),\n//     new MetaMaskConnector({\n//       chains,\n//       options: {\n//         shimDisconnect: true,\n//         UNSTABLE_shimOnConnectSelectAccount: true,\n//       },\n//     }),\n//   ];\n//   return { connectors };\n// };\n\n// const { connectors } = getDefaultWallets({\n//   appName: \"Customer App powered by Tria\",\n//   projectId: \"bd38d3892c8fd8bc9dabf6fced0bd3c6\",\n//   chains,\n// });\n\nconst iframe = new IframeController(\n  \"https://opensea.com\",\n  \"https://wallet.tria.so\"\n);\nconsole.log(\"iframe\", iframe);\nconst authUrl=\"https://auth.tria.so\";\n\nconst authController = new AuthController('https://staging.tria.so');\n\n// const wagmiConfig = createConfig({\n//   autoConnect: true,\n//   connectors,\n//   publicClient,\n//   webSocketPublicClient,\n// });\n\nconst createEncodedData=(data)=>{\n  const encodedParams = btoa(\n    JSON.stringify(data));\n  return encodedParams;\n}\n\nexport const useTriaTransaction = () => {\n  const createIframe = (iframeUrl) => {\n    const iframeContainer = document.createElement(\"div\");\n    iframeContainer.id = \"triaWallet\";\n    iframeContainer.className = \"bg flex justify-between bg-transparent absolute bottom-4 right-2\";\n    iframeContainer.style.position = \"absolute\";\n    iframeContainer.style.bottom = \"4px\";\n    iframeContainer.style.right = \"2px\";\n\n    const innerContainer = document.createElement(\"div\");\n    innerContainer.className = \"mb-4 mr-2 relative rounded-[20px]\";\n\n    const iframeWrapper = document.createElement(\"div\");\n    iframeWrapper.className = \"h-[586px] w-[312px] rounded-[20px] overflow-hidden\";\n\n    const iframe = document.createElement(\"iframe\");\n    iframe.width = \"312\";\n    iframe.height = \"586\";\n    iframe.src = iframeUrl;\n    iframe.allow = \"publickey-credentials-get\";\n    iframe.style.border = \"none\";\n\n    // Append elements to construct the desired structure\n    iframeWrapper.appendChild(iframe);\n    innerContainer.appendChild(iframeWrapper);\n    iframeContainer.appendChild(innerContainer);\n\n    // Append iframeContainer to the document body or a specific container\n    document.body.appendChild(iframeContainer);\n\n    // Return any relevant data if needed\n    \n  };\n\n  \n  const sendTransaction = async (sendDataFromDapp) => {\n    const iframeEncodedData = createEncodedData(sendDataFromDapp);\n    const sendIframeUrl = `${authUrl}/send/${iframeEncodedData}`;\n    const iframe = createIframe(sendIframeUrl);\n    return sendIframeUrl;\n  };\n\n  const signMessage = async (message) => {\n    const iframeEncodedData = createEncodedData(message);\n    const signIframeUrl = `${authUrl}/signMessage/${iframeEncodedData}`;\n    const iframe = createIframe(signIframeUrl);\n    return signIframeUrl;\n  };\n\n  const callContract = async (data) => {\n    const iframeEncodedData = createEncodedData(data);\n    const signIframeUrl = `${authUrl}/mint/${iframeEncodedData}`;\n    const iframe = createIframe(signIframeUrl);\n    return signIframeUrl;\n  };\n  return {\n    sendTransaction,\n    signMessage,\n    callContract\n  }\n}\n\n\n// export const  triaSendTransaction = ({ appDomain, appLogo }) => {\n//   const sendTransaction = async (sendDataFromDapp) => {\n\n//   const loginData=  { loginType: 'native', triaName:triaName , socialName: localStorage?.getItem(\"socialNetwork\"), userId: '', input: '' }\n\n//     // const { from, to, chainName, tokenAddress, amount }=sendDataFromDapp;\n//     const iframeEncodedData=createEncodedData({...sendDataFromDapp,...loginData,appDomain,appLogo});\n//     const sendIframeUrl={authURL}/send/iframeEncodedData;\n//     setIframeURL(sendIframeUrl);\n//   };\n\n\n//   const signMessage = async (message) => {\n//     const loginData=  { loginType: 'native', triaName:triaName , socialName: localStorage?.getItem(\"socialNetwork\"), userId: '', input: '' }\n\n//       // const { message }=message;\n//       const iframeEncodedData=createEncodedData({...message,...loginData,appDomain,appLogo});\n//       const signIframeUrl={authURL}/signMessage/iframeEncodedData;\n//       setIframeURL(signIframeUrl);\n//     };\n\n//   return {\n//     sendTransaction,\n//     signMessage\n//   };\n// };\n\n\n// function encodeParamas(params:typeof transactionPayload): string{\n// const {\n//   triaName,\n//   appDomain\n//   senderName,\n//   accessToken,\n//   darkMode,\n\n\n// } = params\n//   const encodedParams = btoa(\n//     JSON.stringify({\n\n//       qouteRate,\n//       senderBalance,\n//       senderName,\n//       recepientName,\n//       senderLogo,\n//       recepientLogo,\n//       chainLogo,\n//       chainName,\n//       appLogo,\n//       appDomain,\n//       accessToken,\n//       darkMode,\n//       tokenName,\n//       tokenLogo,\n//     })\n//   );\n//   // const iframeUrl = encodedParams;\n//   // return iframeUrl\n\n// }\n\n\n  \n\nexport const TriaConnectProvider = () => {\n  const [renderAuthIframe, setRenderAuthIframe] = useState(false);\n  useEffect(() => {\n    // Function to get the value of a URL parameter\n    const getQueryParam = (param: string) => {\n      return new URLSearchParams(window.location.search).get(param);\n    };\n\n    // Check if the URL parameter is as expected\n    const isVerified = getQueryParam('verified') === 'true';\n    setRenderAuthIframe(isVerified);\n  }, []);\n  return (\n    <>\n      {renderAuthIframe && (\n        <iframe\n          src=\"https://auth.tria.so/verified\"\n          title=\"Auth Verification\"\n          style={{ display: 'none' }}\n        />\n      )}\n    </>\n  );\n};\n\n// const getAccessToken = () => {\n//   const [accessToken, setAccessToken] = useState<string>(\"\");\n//   useEffect(() => {\n//     const getAccessToken =\n//   },[])\n//   return\n// }\n\n\n\n\nconst Application = ({ dappName, dappDomain, uiType, logo,  primaryColor }) => {\n\n  const [view, setView] = useState(\"Home\");\n  const [triaName, setTriaName] = useState(null);\n  const [userAddress, setUserAddress] = useState(null);\n  const [email, setEmail] = useState(\"\")\n  const [showWallet, setShowWallet] = useState(false);\n  const [isDarkMode, setIsDarkMode] = useState(true);\n  const [showOnboarding, setShowOnboarding] = useState(false);\n  const [appDomain, setAppDomain] = useState<string>()\n  const [iframeURL, setIframeURL]=useState();\n  const WALLET_BASE_URL = \"https://wallet.tria.so/\"\n  const [accessToken, setAccessToken] = useState<string>()\n  const darkMode = true;\n  const [authIFrameUrl, setAuthIFrameUrl] = useState<string>(\"\")\n  const {account} = useAccount();\n   useEffect(() => {\n    if (!account && triaName) {\n      console.log(\"Account is null, reloading the page\");\n      localStorage.setItem('hasReloaded', 'true');\n      window.location.reload();\n    } \n  }, [account, triaName]);\n  // useEffect(() => {\n  //   if(!showOnboarding){\n  //     console.log(\"store deleted!\")\n  //     console.log(account)\n  //   }\n  // },[])\n\n\n  useEffect(() => {\n    setInterval(() => {\n      // console.log('account', account)\n      if (localStorage.getItem('tria.wallet.store') !== null) {\n        setShowOnboarding(false)\n        setTriaName(JSON.parse(localStorage.getItem('tria.wallet.store'))?.triaName)\n        setUserAddress(JSON.parse(localStorage.getItem('tria.wallet.store'))?.evm?.address)\n      } else if(localStorage.getItem(\"wagmi.connected\") ===true){\n        setShowOnboarding(false);\n        const wallet = localStorage.getItem(\"wagmi.connected\")\n        console.log(wallet)\n      }else{\n        setShowOnboarding(true);\n      }\n    }, 500)\n  }, [])\n  useEffect(()=>{\n    setInterval(()=>{\n      setShowOnboarding(true)\n    },1000)\n  },[])\n\n  useEffect(()=>{\n    const item = localStorage.getItem(\"access_token\");\n    setAccessToken(item);\n    setAppDomain(window.parent.origin);\n  \n  },[triaName])\n\n  const fromDapp = true;\n\n  useEffect(()=>{\n    const encodedParams = btoa(JSON.stringify({triaName, userAddress, appDomain, darkMode, logo, accessToken, primaryColor, fromDapp}))\n    console.log(encodedParams, triaName,accessToken,logo,appDomain,darkMode, primaryColor, fromDapp)\n    setIframeURL(`https://wallet.tria.so/${encodedParams}`);\n\n  },[triaName])\n\n  useEffect(() => {\n    console.log(\"WALLET URL ---->\", iframeURL);\n  }, [iframeURL]);\n\n  const nav_context_object = {\n    view,\n    setView,\n    triaName,\n    setTriaName,\n    dappName,\n    logo,\n    authController,\n    setShowWallet,\n    setShowOnboarding,\n    showOnboarding,\n    email,\n    setEmail\n  };\n\n  useEffect(() => {\n    console.log(\"log from sdk ----->\",dappName, logo)\n    if(dappName?.length > 0 && logo?.length > 0){\n      setAuthIFrameUrl(`https://auth.tria.so/?dappName=${dappName}&dappLogo=${logo}&stackui=${uiType}&dappDomain=${dappDomain}`);\n    }\n  },[dappName, logo])\n\n  // useEffect(() => {\n  //   console.log(\"userAddress log from sdk ---->\",userAddress)\n  // },[userAddress])\n\n  //   useEffect(() => {\n  //       const handleStorageChange = (event) => {\n  //           if (event.key === 'tria.wallet.store') {\n  //               // Check if the specific localStorage item has been cleared or changed\n  //               // Update the showWallet state based on your specific condition\n  //               const data = event.newValue;\n  //               if (!data) {\n  //                   setShowWallet(false);\n  //                   setTriaName(null);\n  //                   setShowOnboarding(true);\n  //                   alert(\"logged out\")\n  //               }\n  //           }\n  //       };\n\n  //       // Add event listener for localStorage changes\n  //       window.addEventListener('storage', handleStorageChange);\n\n  //       // Cleanup the event listener\n  //       return () => {\n  //           window.removeEventListener('storage', handleStorageChange);\n  //       };\n  //   }, []);\n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      // Select the iframe element\n      const iframeElement = document.getElementById('triaWallet'); // Use the actual ID or selector of your iframe\n\n      if (iframeElement && !iframeElement.contains(event.target)) {\n        // The click is outside the iframe\n        setShowWallet(false);\n      }\n    };\n\n    // Attach the event listener to the document\n    document.addEventListener('mousedown', handleClickOutside);\n\n    // Clean up the event listener\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n\n\n  return (\n    <>\n      {/* <WagmiConfig config={wagmiConfig}> */}\n      <NavContext.Provider value={nav_context_object}>\n        {/* <Router> */}\n        {!triaName && showOnboarding &&<div className=\"rounded-[20px] overflow-hidden absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\">\n            <iframe width=\"314\" height=\"586\" src={authIFrameUrl} allow=\"publickey-credentials-get\"/>\n          </div>}\n        {showWallet && (\n          <div id=\"triaWallet\" className=\"bg flex  justify-between bg-transparent absolute bottom-4 right-2  \">\n            <div className=\"mb-4 mr-2 relative rounded-[20px]\">\n              <div className=\"absolute w-[312px] h-[40px] rounded-[20px] top-[-38px] flex items-end justify-center\" >\n                {/* <img src='./WalletCloseButton.svg' alt='' className=\"cursor-pointer\"  onClick={() => {setShowWallet(false)}}/> */}\n                <div className=\"cursor-pointer\" onClick={()=>{setShowWallet(false)}}>\n                  <WalletCloseButton/>\n\n                </div>\n              </div>\n              <div className=\"h-[586px] w-[312px] rounded-[20px] overflow-hidden bg-[#101010]\">\n          <iframe\n          width=\"312\"\n          height=\"586\"\n          src={iframeURL}\n          allow=\"clipboard-read; clipboard-write; publickey-credentials-get\"\n          style={{ backgroundColor: '#101010' }}\n          />\n              </div>\n            </div>\n          </div>\n\n        )}\n       \n        {triaName && !showWallet && (\n          <div\n            className=\"wallet_icon absolute w-[80px] bottom-4 right-8 cursor-pointer\"\n            onClick={() => {\n              setShowWallet(!showWallet);\n            }}\n          >\n            <TriaWalletButton bgColor={primaryColor} />\n\n          </div>\n        )}\n      </NavContext.Provider>\n      {/* </WagmiConfig> */}\n    </>\n  );\n};\n\n\nexport default Application;\n","import { useState, createContext } from \"react\";\nimport ReactDOM from \"react-dom/client\";\n//@ts-ignore\nconst NavContext = createContext()\n\nexport default NavContext","export const eventTypes = {\n  logIn: 'Log in',\n  triaSignUp: 'Tria Sign up',\n  socialSignUp: 'Social Sign up',\n  signMessage: 'Sign Message',\n  send: 'Send',\n  disconnect: 'Disconnect',\n  switchChain: 'Switch chain',\n};\n\nexport const TRIA_WALLET_STORE = 'tria.wallet.store';\nexport const TRIA_WALLET_SELECTED_CHAIN = 'tria.wallet.selectedChain';\n","import { IframeArgs } from '../types';\nimport { Send } from '@tria-sdk/web';\nimport { eventTypes } from '../utils/constants';\n\nexport class IframeController {\n  walletUrl: string;\n  parentUrl: string;\n\n  constructor({ parentUrl, walletUrl }: IframeArgs) {\n    this.parentUrl = parentUrl;\n    this.walletUrl = walletUrl;\n  }\n\n  getVault({\n    triaName,\n    password,\n    userId,\n  }: {\n    triaName?: string;\n    password: string;\n    userId?: string;\n  }): {} {\n    const encodedParams = btoa(\n      JSON.stringify({\n        op: 'getVault',\n        triaName,\n        password,\n        userId,\n      })\n    );\n    // wallet iframe trigger for auto wallet login\n    const iframeUrl = `${this.walletUrl}/login?params=${encodedParams}`;\n    const eventType = eventTypes.logIn;\n    return { iframeUrl, eventType };\n  }\n\n  createAccount({ triaName, password }: { triaName: string; password: string }) {\n    const encodedParams = btoa(\n      JSON.stringify({\n        op: 'createAccount',\n        triaName,\n        password,\n      })\n    );\n    // wallet iframe trigger for auto wallet login\n    const iframeUrl = `${this.walletUrl}/login?params=${encodedParams}`;\n    const eventType = eventTypes.triaSignUp;\n    return { iframeUrl, eventType };\n  }\n\n  socialogin({\n    triaName,\n    password,\n    platform,\n    userId,\n    isPasswordLess,\n  }: {\n    triaName: string;\n    password: string;\n    platform: string;\n    userId: string;\n    isPasswordLess: boolean;\n  }) {\n    const encodedParams = btoa(\n      JSON.stringify({\n        op: 'socialogin',\n        triaName,\n        password,\n        userId,\n        platform,\n        isPasswordLess,\n      })\n    );\n    // wallet iframe trigger for auto wallet login\n    const iframeUrl = `${this.walletUrl}/login?params=${encodedParams}`;\n    const eventType = eventTypes.socialSignUp;\n    return { iframeUrl, eventType };\n  }\n\n  async signMessage(chainName: string, message: string, loginType: 'native', triaName: '', socialName: '', userId: '', input: '',appDomain:'',appLogo:'') {\n    const encodedParams = btoa(\n      JSON.stringify({\n        chainName,\n        message,\n        loginType,\n        triaName,\n        socialName,\n        userId,\n        input,\n        appDomain,\n        appLogo\n      })\n    );\n    const iframeUrl = `${this.walletUrl}/sign?params=${encodedParams}`;\n    const signWindow = window.open(iframeUrl, '_blank', `popup,width=400,height=500`);\n    const eventType = eventTypes.signMessage;\n    return { iframeUrl, eventType };\n  }\n\n  async send(chainName: string, payload: Send) {\n    const encodedParams = btoa(\n      JSON.stringify({\n        chainName,\n        payload,\n      })\n    );\n    const iframeUrl = `${this.walletUrl}/send?params=${encodedParams}`;\n    const sendWindow = window.open(iframeUrl, '_blank', `popup,width=400,height=500`);\n    const eventType = eventTypes.send;\n    return { iframeUrl, eventType };\n  }\n\n  approve(triaName: string, chainName: string, tokenAddress: string, amount: number) {\n    const encodedParams = btoa(\n      JSON.stringify({\n        chainName,\n        triaName,\n        tokenAddress,\n        amount,\n      })\n    );\n    const iframeUrl = `${this.walletUrl}/approve?params=${encodedParams}`;\n    const approveWindow = window.open(iframeUrl, '_blank', `popup,width=400,height=500`);\n    const eventType = 'Approve';\n    return { iframeUrl, eventType };\n  }\n}\n","import React, { useState } from 'react';\n\ninterface Props{\n bgColor: string,\n}\n\nexport const TriaWalletButton:React.FC<Props> = ({bgColor}) => {\n  \n\n  return (\n    <div>\n      <svg width=\"134\" height=\"134\" viewBox=\"0 0 134 134\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g filter=\"url(#filter0_d_1316_13027)\">\n          <rect x=\"35\" y=\"35\" width=\"64\" height=\"64\" rx=\"32\" fill=\"#101010\" />\n        </g>\n        <g filter=\"url(#filter1_d_1316_13027)\">\n          <rect x=\"37.5098\" y=\"37.5098\" width=\"58.9804\" height=\"58.9804\" rx=\"29.4902\" fill=\"url(#paint1_linear_1316_13027)\" shape-rendering=\"crispEdges\" />\n          <g clip-path=\"url(#clip0_1316_13027)\">\n            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M81 53H53V81H81V53ZM67.8533 61.2654V64.9058L73.8652 62.5352V65.2285C73.8652 65.8062 73.5281 66.3228 73.0206 66.5229L67.8533 68.5606V65.8728C67.8498 65.2986 67.5136 64.7863 67.0087 64.5872L62.686 62.8826C62.1784 62.6824 61.8414 62.1658 61.8414 61.5881V58.8948L67.8533 61.2654ZM67.8533 68.5767V69.2782H67.8618V76.8857H65.3848V71.2581L62.686 70.1938C62.1784 69.9937 61.8414 69.4771 61.8414 68.8993V66.206L67.8533 68.5767Z\" fill=\"#101010\" />\n          </g>\n          <rect x=\"37.7598\" y=\"37.7598\" width=\"58.4804\" height=\"58.4804\" rx=\"29.2402\" stroke={bgColor} stroke-width=\"0.5\" shape-rendering=\"crispEdges\" />\n        </g>\n        <defs>\n          <filter id=\"filter0_d_1316_13027\" x=\"0\" y=\"0\" width=\"134\" height=\"134\" filterUnits=\"userSpaceOnUse\" color-interpolation-filters=\"sRGB\">\n            <feFlood flood-opacity=\"0\" result=\"BackgroundImageFix\" />\n            <feColorMatrix in=\"SourceAlpha\" type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\" result=\"hardAlpha\" />\n            <feOffset />\n            <feGaussianBlur stdDeviation=\"17.5\" />\n            <feComposite in2=\"hardAlpha\" operator=\"out\" />\n            <feColorMatrix type=\"matrix\" values=\"0 0 0 0 0.567674 0 0 0 0 0.48 0 0 0 0 1 0 0 0 0.35 0\" />\n            <feBlend mode=\"normal\" in2=\"BackgroundImageFix\" result=\"effect1_dropShadow_1316_13027\" />\n            <feBlend mode=\"normal\" in=\"SourceGraphic\" in2=\"effect1_dropShadow_1316_13027\" result=\"shape\" />\n          </filter>\n          <filter id=\"filter1_d_1316_13027\" x=\"6.50977\" y=\"6.50977\" width=\"120.98\" height=\"120.98\" filterUnits=\"userSpaceOnUse\" color-interpolation-filters=\"sRGB\">\n            <feFlood flood-opacity=\"0\" result=\"BackgroundImageFix\" />\n            <feColorMatrix in=\"SourceAlpha\" type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\" result=\"hardAlpha\" />\n            <feOffset />\n            <feGaussianBlur stdDeviation=\"15.5\" />\n            <feComposite in2=\"hardAlpha\" operator=\"out\" />\n            <feColorMatrix type=\"matrix\" values=\"0 0 0 0 0.567674 0 0 0 0 0.48 0 0 0 0 1 0 0 0 0.68 0\" />\n            <feBlend mode=\"normal\" in2=\"BackgroundImageFix\" result=\"effect1_dropShadow_1316_13027\" />\n            <feBlend mode=\"normal\" in=\"SourceGraphic\" in2=\"effect1_dropShadow_1316_13027\" result=\"shape\" />\n          </filter>\n          <linearGradient id=\"paint0_linear_1316_13027\" x1=\"35\" y1=\"35\" x2=\"112.218\" y2=\"65.1631\" gradientUnits=\"userSpaceOnUse\">\n            <stop stop-color=\"#101010\" />\n            <stop offset=\"1\" stop-color={bgColor} />\n          </linearGradient>\n          <linearGradient id=\"paint1_linear_1316_13027\" x1=\"37.5098\" y1=\"37.5098\" x2=\"108.671\" y2=\"65.3071\" gradientUnits=\"userSpaceOnUse\">\n            <stop stop-color={bgColor} />\n            <stop offset=\"1\" stop-color={bgColor} />\n          </linearGradient>\n          <clipPath id=\"clip0_1316_13027\">\n            <rect x=\"53\" y=\"53\" width=\"28\" height=\"28\" rx=\"6\" fill=\"#101010\" />\n          </clipPath>\n        </defs>\n      </svg>\n    </div>\n  );\n};\n\n\n","import React from 'react';\n\ninterface Props{\n onClick: () => void;\n}\n\nconst WalletCloseButton:React.FC<Props> = ({onClick:han}) => {\n  return (\n    <svg width=\"110\" height=\"38\" viewBox=\"0 0 110 38\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M0 35H2.34523C11.1426 35 19.6355 31.7787 26.22 25.9443L30.9961 21.7123C44.8891 9.4021 65.8643 9.67334 79.4343 22.3387L82.6264 25.318C89.2925 31.5397 98.0714 35 107.19 35H110V37.5H0V35Z\" fill=\"#101010\"/>\n      <path d=\"M60.9401 22.2125L56.0501 27.1025C55.4726 27.68 54.5276 27.68 53.9501 27.1025L49.0601 22.2125\" stroke=\"#FAFAFA\" strokeOpacity=\"0.8\" strokeWidth=\"1.5\" strokeMiterlimit=\"10\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n    </svg>\n  );\n};\n\nexport default WalletCloseButton;\n","import { useEffect, useState } from 'react';\n// import { eventTypes } from '../utils/constants';\nconst authUrl=\"https://auth.tria.so\";\nimport {createEncodedData,createIframe} from \"../utils\"\n\n\n\nexport const useContractWrite = (calldata:any) => {\n  const [data, setData] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const write = () => {\n    setIsLoading(true);\n    const iframeEncodedData = createEncodedData(calldata);   \n    const signIframeUrl =`${authUrl}/mint/${iframeEncodedData}`;\n    createIframe(signIframeUrl,\"sdkMint\");\n    setIsLoading(false);\n    return signIframeUrl;\n\n  };\n\n  useEffect(() => {\n    const detect = (event: MessageEvent) => {\n     console.log(\"event---------------->\",event);\n      if (event.origin !== authUrl) return;\n\n      let eventData;\n      try {\n        eventData = JSON.parse(event.data);\n      } catch (err) {\n        eventData = event.data;\n      }\n\n      if (eventData?.type ==='closeIframe' && eventData?.callFrom==\"mint\") {\n        setData(eventData?.data);\n        setIsLoading(false);\n        document.getElementById(\"sdkMint\")?.remove();\n      }\n    };\n\n    window.addEventListener('message', detect);\n\n    return () => {\n      window.removeEventListener('message', detect);\n    };\n  }, []);\n\n  return { data, isLoading, isError, isSuccess: !!data, write };\n};\n","export const createEncodedData=(data:any)=>{\n    const encodedParams = btoa(\n      JSON.stringify(data));\n    return encodedParams;\n  }\n  \n\n export  const createIframe = (iframeUrl:string,hookName:string) => {\n    const iframeContainer = document.createElement(\"div\");\n    iframeContainer.id =hookName ;\n    iframeContainer.className = \"bg flex justify-between bg-transparent absolute bottom-4 right-2\";\n    iframeContainer.style.position = \"absolute\";\n    iframeContainer.style.bottom = \"4px\";\n    iframeContainer.style.right = \"2px\";\n\n    const innerContainer = document.createElement(\"div\");\n    innerContainer.className = \"mb-4 mr-2 relative rounded-[20px]\";\n\n    const iframeWrapper = document.createElement(\"div\");\n    iframeWrapper.className = \"h-[586px] w-[312px] rounded-[20px] overflow-hidden\";\n\n    const iframe = document.createElement(\"iframe\");\n    iframe.width = \"312\";\n    iframe.height = \"586\";\n    iframe.src = iframeUrl;\n    iframe.allow = \"publickey-credentials-get\";\n    iframe.style.border = \"none\";\n\n    // Append elements to construct the desired structure\n    iframeWrapper.appendChild(iframe);\n    innerContainer.appendChild(iframeWrapper);\n    iframeContainer.appendChild(innerContainer);\n\n    // Append iframeContainer to the document body or a specific container\n    document.body.appendChild(iframeContainer);\n\n    // Return any relevant data if needed\n    \n  };\n","// useSignMessage.ts\n\nimport { useEffect, useState } from 'react';\n// import { eventTypes } from '../utils/constants';\nconst authUrl=\"https://auth.tria.so\";\nimport {createEncodedData,createIframe} from \"../utils\"\n\n\n\nexport const useSendTransaction = (calldata:any) => {\n  const [data, setData] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const sendTransaction  = () => {\n    setIsLoading(true);\n    const iframeEncodedData = createEncodedData(calldata);\n    const signIframeUrl =  `${authUrl}/send/${iframeEncodedData}`;\n    const iframe = createIframe(signIframeUrl,\"sdkSend\");\n    setIsLoading(false);\n    return signIframeUrl;\n\n  };\n\n  useEffect(() => {\n    const detect = (event: MessageEvent) => {\n      if (event.origin !== authUrl) return;\n\n      let eventData;\n      try {\n        eventData = JSON.parse(event.data);\n      } catch (err) {\n        eventData = event.data;\n      }\n\n      if (eventData?.type ==='closeIframe' && eventData?.callFrom==\"send\") {\n        setData(eventData?.data);\n        setIsLoading(false);\n        document.getElementById(\"sdkSend\")?.remove();\n      }\n    };\n\n    window.addEventListener('message', detect);\n\n    return () => {\n      window.removeEventListener('message', detect);\n    };\n  }, []);\n\n  return { data, isLoading, isError, isSuccess: !!data, sendTransaction };\n};\n","import { useEffect, useState } from 'react';\n// import { eventTypes } from '../utils/constants';\nconst authUrl=\"https://auth.tria.so\";\nimport {createEncodedData,createIframe} from \"../utils\"\n\n\nexport const useSignMessage = (calldata:any) => {\n  const [data, setData] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const signMessage = () => {\n    setIsLoading(true);\n    \n\n    const iframeEncodedData = createEncodedData(calldata);\n    const signIframeUrl = `${authUrl}/signMessage/${iframeEncodedData}`;\n    createIframe(signIframeUrl,\"sdkSign\");\n    setIsLoading(false);\n    return signIframeUrl;\n\n  };\n\n  useEffect(() => {\n    const detect = (event: MessageEvent) => {\n      if (event.origin !== authUrl) return;\n\n      let eventData;\n      try {\n        eventData = JSON.parse(event.data);\n      } catch (err) {\n        eventData = event.data;\n      }\n    \n      if (eventData?.type ==='closeIframe' && eventData?.callFrom==\"sign\") {\n        console.log(\"event\",eventData);\n        setData(eventData?.data);\n        setIsLoading(false);\n        document.getElementById(\"sdkSign\")?.remove();\n      \n      }\n    };\n\n    window.addEventListener('message', detect);\n\n    return () => {\n      window.removeEventListener('message', detect);\n    };\n  }, []);\n\n  return { data, isLoading, isError, isSuccess: !!data, signMessage };\n};\n","import { useState } from 'react';\n// import { eventTypes } from '../utils/constants';\nimport { ethers } from 'ethers';\nimport {\n    WalletController,\n  } from \"@tria-sdk/web\";\n\n\n  interface params {\n    contractDetails: any;\n    baseUrl?: string;\n}\n\n\nexport const useContractRead = (params: params) => {\n  const [data, setData] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const read =async () => {\n    try{\n    setIsLoading(true);\n    const { contractDetails, baseUrl = 'https://prod.tria.so' } = params;\n    const walletType = { embedded: true };\n\n    const wallet = new WalletController({\n        baseUrl,\n        walletType,\n      });\n    \n\n    //@ts-ignore\n    const res = await wallet?.readContract(contractDetails);\n    const value = ethers.utils.formatEther(res.data);\n    console.log('getItemsNativePrice', res.data.toString(), '->', value);\n    setData(value);\n    setIsLoading(false);\n  }\n  catch(err){\n    setIsError(true);\n  }\n}\n\n\n  return { data, isLoading, isError, isSuccess: !!data, read };\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,IAAAA,gBAA0C;;;ACD1C,mBAAwC;AAGxC,IAAM,iBAAa,4BAAc;AAEjC,IAAO,qBAAQ;;;ACLR,IAAM,aAAa;AAAA,EACxB,OAAO;AAAA,EACP,YAAY;AAAA,EACZ,cAAc;AAAA,EACd,aAAa;AAAA,EACb,MAAM;AAAA,EACN,YAAY;AAAA,EACZ,aAAa;AACf;;;ACJO,IAAM,mBAAN,MAAuB;AAAA,EAI5B,YAAY,EAAE,WAAW,UAAU,GAAe;AAChD,SAAK,YAAY;AACjB,SAAK,YAAY;AAAA,EACnB;AAAA,EAEA,SAAS;AAAA,IACP;AAAA,IACA;AAAA,IACA;AAAA,EACF,GAIO;AACL,UAAM,gBAAgB;AAAA,MACpB,KAAK,UAAU;AAAA,QACb,IAAI;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,MACF,CAAC;AAAA,IACH;AAEA,UAAM,YAAY,GAAG,KAAK,SAAS,iBAAiB,aAAa;AACjE,UAAM,YAAY,WAAW;AAC7B,WAAO,EAAE,WAAW,UAAU;AAAA,EAChC;AAAA,EAEA,cAAc,EAAE,UAAU,SAAS,GAA2C;AAC5E,UAAM,gBAAgB;AAAA,MACpB,KAAK,UAAU;AAAA,QACb,IAAI;AAAA,QACJ;AAAA,QACA;AAAA,MACF,CAAC;AAAA,IACH;AAEA,UAAM,YAAY,GAAG,KAAK,SAAS,iBAAiB,aAAa;AACjE,UAAM,YAAY,WAAW;AAC7B,WAAO,EAAE,WAAW,UAAU;AAAA,EAChC;AAAA,EAEA,WAAW;AAAA,IACT;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,GAMG;AACD,UAAM,gBAAgB;AAAA,MACpB,KAAK,UAAU;AAAA,QACb,IAAI;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF,CAAC;AAAA,IACH;AAEA,UAAM,YAAY,GAAG,KAAK,SAAS,iBAAiB,aAAa;AACjE,UAAM,YAAY,WAAW;AAC7B,WAAO,EAAE,WAAW,UAAU;AAAA,EAChC;AAAA,EAEM,YAAY,WAAmB,SAAiB,WAAqB,UAAc,YAAgB,QAAY,OAAU,WAAa,SAAY;AAAA;AACtJ,YAAM,gBAAgB;AAAA,QACpB,KAAK,UAAU;AAAA,UACb;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF,CAAC;AAAA,MACH;AACA,YAAM,YAAY,GAAG,KAAK,SAAS,gBAAgB,aAAa;AAChE,YAAM,aAAa,OAAO,KAAK,WAAW,UAAU,4BAA4B;AAChF,YAAM,YAAY,WAAW;AAC7B,aAAO,EAAE,WAAW,UAAU;AAAA,IAChC;AAAA;AAAA,EAEM,KAAK,WAAmB,SAAe;AAAA;AAC3C,YAAM,gBAAgB;AAAA,QACpB,KAAK,UAAU;AAAA,UACb;AAAA,UACA;AAAA,QACF,CAAC;AAAA,MACH;AACA,YAAM,YAAY,GAAG,KAAK,SAAS,gBAAgB,aAAa;AAChE,YAAM,aAAa,OAAO,KAAK,WAAW,UAAU,4BAA4B;AAChF,YAAM,YAAY,WAAW;AAC7B,aAAO,EAAE,WAAW,UAAU;AAAA,IAChC;AAAA;AAAA,EAEA,QAAQ,UAAkB,WAAmB,cAAsB,QAAgB;AACjF,UAAM,gBAAgB;AAAA,MACpB,KAAK,UAAU;AAAA,QACb;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF,CAAC;AAAA,IACH;AACA,UAAM,YAAY,GAAG,KAAK,SAAS,mBAAmB,aAAa;AACnE,UAAM,gBAAgB,OAAO,KAAK,WAAW,UAAU,4BAA4B;AACnF,UAAM,YAAY;AAClB,WAAO,EAAE,WAAW,UAAU;AAAA,EAChC;AACF;;;AH5FA,kBAA+C;;;AIrBrC;AAPH,IAAM,mBAAmC,CAAC,EAAC,QAAO,MAAM;AAG7D,SACE,4CAAC,SACC,uDAAC,SAAI,OAAM,OAAM,QAAO,OAAM,SAAQ,eAAc,MAAK,QAAO,OAAM,8BACpE;AAAA,gDAAC,OAAE,QAAO,8BACR,sDAAC,UAAK,GAAE,MAAK,GAAE,MAAK,OAAM,MAAK,QAAO,MAAK,IAAG,MAAK,MAAK,WAAU,GACpE;AAAA,IACA,6CAAC,OAAE,QAAO,8BACR;AAAA,kDAAC,UAAK,GAAE,WAAU,GAAE,WAAU,OAAM,WAAU,QAAO,WAAU,IAAG,WAAU,MAAK,kCAAiC,mBAAgB,cAAa;AAAA,MAC/I,4CAAC,OAAE,aAAU,0BACX,sDAAC,UAAK,aAAU,WAAU,aAAU,WAAU,GAAE,saAAqa,MAAK,WAAU,GACte;AAAA,MACA,4CAAC,UAAK,GAAE,WAAU,GAAE,WAAU,OAAM,WAAU,QAAO,WAAU,IAAG,WAAU,QAAQ,SAAS,gBAAa,OAAM,mBAAgB,cAAa;AAAA,OAC/I;AAAA,IACA,6CAAC,UACC;AAAA,mDAAC,YAAO,IAAG,wBAAuB,GAAE,KAAI,GAAE,KAAI,OAAM,OAAM,QAAO,OAAM,aAAY,kBAAiB,+BAA4B,QAC9H;AAAA,oDAAC,aAAQ,iBAAc,KAAI,QAAO,sBAAqB;AAAA,QACvD,4CAAC,mBAAc,IAAG,eAAc,MAAK,UAAS,QAAO,6CAA4C,QAAO,aAAY;AAAA,QACpH,4CAAC,cAAS;AAAA,QACV,4CAAC,oBAAe,cAAa,QAAO;AAAA,QACpC,4CAAC,iBAAY,KAAI,aAAY,UAAS,OAAM;AAAA,QAC5C,4CAAC,mBAAc,MAAK,UAAS,QAAO,wDAAuD;AAAA,QAC3F,4CAAC,aAAQ,MAAK,UAAS,KAAI,sBAAqB,QAAO,iCAAgC;AAAA,QACvF,4CAAC,aAAQ,MAAK,UAAS,IAAG,iBAAgB,KAAI,iCAAgC,QAAO,SAAQ;AAAA,SAC/F;AAAA,MACA,6CAAC,YAAO,IAAG,wBAAuB,GAAE,WAAU,GAAE,WAAU,OAAM,UAAS,QAAO,UAAS,aAAY,kBAAiB,+BAA4B,QAChJ;AAAA,oDAAC,aAAQ,iBAAc,KAAI,QAAO,sBAAqB;AAAA,QACvD,4CAAC,mBAAc,IAAG,eAAc,MAAK,UAAS,QAAO,6CAA4C,QAAO,aAAY;AAAA,QACpH,4CAAC,cAAS;AAAA,QACV,4CAAC,oBAAe,cAAa,QAAO;AAAA,QACpC,4CAAC,iBAAY,KAAI,aAAY,UAAS,OAAM;AAAA,QAC5C,4CAAC,mBAAc,MAAK,UAAS,QAAO,wDAAuD;AAAA,QAC3F,4CAAC,aAAQ,MAAK,UAAS,KAAI,sBAAqB,QAAO,iCAAgC;AAAA,QACvF,4CAAC,aAAQ,MAAK,UAAS,IAAG,iBAAgB,KAAI,iCAAgC,QAAO,SAAQ;AAAA,SAC/F;AAAA,MACA,6CAAC,oBAAe,IAAG,4BAA2B,IAAG,MAAK,IAAG,MAAK,IAAG,WAAU,IAAG,WAAU,eAAc,kBACpG;AAAA,oDAAC,UAAK,cAAW,WAAU;AAAA,QAC3B,4CAAC,UAAK,QAAO,KAAI,cAAY,SAAS;AAAA,SACxC;AAAA,MACA,6CAAC,oBAAe,IAAG,4BAA2B,IAAG,WAAU,IAAG,WAAU,IAAG,WAAU,IAAG,WAAU,eAAc,kBAC9G;AAAA,oDAAC,UAAK,cAAY,SAAS;AAAA,QAC3B,4CAAC,UAAK,QAAO,KAAI,cAAY,SAAS;AAAA,SACxC;AAAA,MACA,4CAAC,cAAS,IAAG,oBACX,sDAAC,UAAK,GAAE,MAAK,GAAE,MAAK,OAAM,MAAK,QAAO,MAAK,IAAG,KAAI,MAAK,WAAU,GACnE;AAAA,OACF;AAAA,KACF,GACF;AAEJ;;;AClDI,IAAAC,sBAAA;AAFJ,IAAM,oBAAoC,CAAC,EAAC,SAAQ,IAAG,MAAM;AAC3D,SACE,8CAAC,SAAI,OAAM,OAAM,QAAO,MAAK,SAAQ,cAAa,MAAK,QAAO,OAAM,8BAClE;AAAA,iDAAC,UAAK,GAAE,4LAA2L,MAAK,WAAS;AAAA,IACjN,6CAAC,UAAK,GAAE,gGAA+F,QAAO,WAAU,eAAc,OAAM,aAAY,OAAM,kBAAiB,MAAK,eAAc,SAAQ,gBAAe,SAAO;AAAA,KAClO;AAEJ;AAEA,IAAO,4BAAQ;;;ALsBf,qBAA2B;;;AMrC3B,IAAAC,gBAAoC;;;ACA7B,IAAM,oBAAkB,CAAC,SAAW;AACvC,QAAM,gBAAgB;AAAA,IACpB,KAAK,UAAU,IAAI;AAAA,EAAC;AACtB,SAAO;AACT;AAGO,IAAM,eAAe,CAAC,WAAiB,aAAoB;AAChE,QAAM,kBAAkB,SAAS,cAAc,KAAK;AACpD,kBAAgB,KAAI;AACpB,kBAAgB,YAAY;AAC5B,kBAAgB,MAAM,WAAW;AACjC,kBAAgB,MAAM,SAAS;AAC/B,kBAAgB,MAAM,QAAQ;AAE9B,QAAM,iBAAiB,SAAS,cAAc,KAAK;AACnD,iBAAe,YAAY;AAE3B,QAAM,gBAAgB,SAAS,cAAc,KAAK;AAClD,gBAAc,YAAY;AAE1B,QAAMC,UAAS,SAAS,cAAc,QAAQ;AAC9C,EAAAA,QAAO,QAAQ;AACf,EAAAA,QAAO,SAAS;AAChB,EAAAA,QAAO,MAAM;AACb,EAAAA,QAAO,QAAQ;AACf,EAAAA,QAAO,MAAM,SAAS;AAGtB,gBAAc,YAAYA,OAAM;AAChC,iBAAe,YAAY,aAAa;AACxC,kBAAgB,YAAY,cAAc;AAG1C,WAAS,KAAK,YAAY,eAAe;AAI3C;;;ADpCF,IAAM,UAAQ;AAKP,IAAM,mBAAmB,CAAC,aAAiB;AAChD,QAAM,CAAC,MAAM,OAAO,QAAI,wBAAS,EAAE;AACnC,QAAM,CAAC,WAAW,YAAY,QAAI,wBAAS,KAAK;AAChD,QAAM,CAAC,SAAS,UAAU,QAAI,wBAAS,KAAK;AAE5C,QAAM,QAAQ,MAAM;AAClB,iBAAa,IAAI;AACjB,UAAM,oBAAoB,kBAAkB,QAAQ;AACpD,UAAM,gBAAe,GAAG,OAAO,SAAS,iBAAiB;AACzD,iBAAa,eAAc,SAAS;AACpC,iBAAa,KAAK;AAClB,WAAO;AAAA,EAET;AAEA,+BAAU,MAAM;AACd,UAAM,SAAS,CAAC,UAAwB;AAvB5C;AAwBK,cAAQ,IAAI,0BAAyB,KAAK;AACzC,UAAI,MAAM,WAAW;AAAS;AAE9B,UAAI;AACJ,UAAI;AACF,oBAAY,KAAK,MAAM,MAAM,IAAI;AAAA,MACnC,SAAS,KAAK;AACZ,oBAAY,MAAM;AAAA,MACpB;AAEA,WAAI,uCAAW,UAAQ,kBAAiB,uCAAW,aAAU,QAAQ;AACnE,gBAAQ,uCAAW,IAAI;AACvB,qBAAa,KAAK;AAClB,uBAAS,eAAe,SAAS,MAAjC,mBAAoC;AAAA,MACtC;AAAA,IACF;AAEA,WAAO,iBAAiB,WAAW,MAAM;AAEzC,WAAO,MAAM;AACX,aAAO,oBAAoB,WAAW,MAAM;AAAA,IAC9C;AAAA,EACF,GAAG,CAAC,CAAC;AAEL,SAAO,EAAE,MAAM,WAAW,SAAS,WAAW,CAAC,CAAC,MAAM,MAAM;AAC9D;;;AE/CA,IAAAC,gBAAoC;AAEpC,IAAMC,WAAQ;AAKP,IAAM,qBAAqB,CAAC,aAAiB;AAClD,QAAM,CAAC,MAAM,OAAO,QAAI,wBAAS,EAAE;AACnC,QAAM,CAAC,WAAW,YAAY,QAAI,wBAAS,KAAK;AAChD,QAAM,CAAC,SAAS,UAAU,QAAI,wBAAS,KAAK;AAE5C,QAAM,kBAAmB,MAAM;AAC7B,iBAAa,IAAI;AACjB,UAAM,oBAAoB,kBAAkB,QAAQ;AACpD,UAAM,gBAAiB,GAAGA,QAAO,SAAS,iBAAiB;AAC3D,UAAMC,UAAS,aAAa,eAAc,SAAS;AACnD,iBAAa,KAAK;AAClB,WAAO;AAAA,EAET;AAEA,+BAAU,MAAM;AACd,UAAM,SAAS,CAAC,UAAwB;AAzB5C;AA0BM,UAAI,MAAM,WAAWD;AAAS;AAE9B,UAAI;AACJ,UAAI;AACF,oBAAY,KAAK,MAAM,MAAM,IAAI;AAAA,MACnC,SAAS,KAAK;AACZ,oBAAY,MAAM;AAAA,MACpB;AAEA,WAAI,uCAAW,UAAQ,kBAAiB,uCAAW,aAAU,QAAQ;AACnE,gBAAQ,uCAAW,IAAI;AACvB,qBAAa,KAAK;AAClB,uBAAS,eAAe,SAAS,MAAjC,mBAAoC;AAAA,MACtC;AAAA,IACF;AAEA,WAAO,iBAAiB,WAAW,MAAM;AAEzC,WAAO,MAAM;AACX,aAAO,oBAAoB,WAAW,MAAM;AAAA,IAC9C;AAAA,EACF,GAAG,CAAC,CAAC;AAEL,SAAO,EAAE,MAAM,WAAW,SAAS,WAAW,CAAC,CAAC,MAAM,gBAAgB;AACxE;;;AClDA,IAAAE,gBAAoC;AAEpC,IAAMC,WAAQ;AAIP,IAAM,iBAAiB,CAAC,aAAiB;AAC9C,QAAM,CAAC,MAAM,OAAO,QAAI,wBAAS,EAAE;AACnC,QAAM,CAAC,WAAW,YAAY,QAAI,wBAAS,KAAK;AAChD,QAAM,CAAC,SAAS,UAAU,QAAI,wBAAS,KAAK;AAE5C,QAAM,cAAc,MAAM;AACxB,iBAAa,IAAI;AAGjB,UAAM,oBAAoB,kBAAkB,QAAQ;AACpD,UAAM,gBAAgB,GAAGA,QAAO,gBAAgB,iBAAiB;AACjE,iBAAa,eAAc,SAAS;AACpC,iBAAa,KAAK;AAClB,WAAO;AAAA,EAET;AAEA,+BAAU,MAAM;AACd,UAAM,SAAS,CAAC,UAAwB;AAxB5C;AAyBM,UAAI,MAAM,WAAWA;AAAS;AAE9B,UAAI;AACJ,UAAI;AACF,oBAAY,KAAK,MAAM,MAAM,IAAI;AAAA,MACnC,SAAS,KAAK;AACZ,oBAAY,MAAM;AAAA,MACpB;AAEA,WAAI,uCAAW,UAAQ,kBAAiB,uCAAW,aAAU,QAAQ;AACnE,gBAAQ,IAAI,SAAQ,SAAS;AAC7B,gBAAQ,uCAAW,IAAI;AACvB,qBAAa,KAAK;AAClB,uBAAS,eAAe,SAAS,MAAjC,mBAAoC;AAAA,MAEtC;AAAA,IACF;AAEA,WAAO,iBAAiB,WAAW,MAAM;AAEzC,WAAO,MAAM;AACX,aAAO,oBAAoB,WAAW,MAAM;AAAA,IAC9C;AAAA,EACF,GAAG,CAAC,CAAC;AAEL,SAAO,EAAE,MAAM,WAAW,SAAS,WAAW,CAAC,CAAC,MAAM,YAAY;AACpE;;;ACnDA,IAAAC,gBAAyB;AAEzB,oBAAuB;AACvB,iBAES;AASF,IAAM,kBAAkB,CAAC,WAAmB;AACjD,QAAM,CAAC,MAAM,OAAO,QAAI,wBAAS,EAAE;AACnC,QAAM,CAAC,WAAW,YAAY,QAAI,wBAAS,KAAK;AAChD,QAAM,CAAC,SAAS,UAAU,QAAI,wBAAS,KAAK;AAE5C,QAAM,OAAM,MAAY;AACtB,QAAG;AACH,mBAAa,IAAI;AACjB,YAAM,EAAE,iBAAiB,UAAU,uBAAuB,IAAI;AAC9D,YAAM,aAAa,EAAE,UAAU,KAAK;AAEpC,YAAM,SAAS,IAAI,4BAAiB;AAAA,QAChC;AAAA,QACA;AAAA,MACF,CAAC;AAIH,YAAM,MAAM,MAAM,iCAAQ,aAAa;AACvC,YAAM,QAAQ,qBAAO,MAAM,YAAY,IAAI,IAAI;AAC/C,cAAQ,IAAI,uBAAuB,IAAI,KAAK,SAAS,GAAG,MAAM,KAAK;AACnE,cAAQ,KAAK;AACb,mBAAa,KAAK;AAAA,IACpB,SACM,KAAI;AACR,iBAAW,IAAI;AAAA,IACjB;AAAA,EACF;AAGE,SAAO,EAAE,MAAM,WAAW,SAAS,WAAW,CAAC,CAAC,MAAM,KAAK;AAC7D;;;AVuNI,IAAAC,sBAAA;AArNJ,OAAO,SAAS,OAAO,UAAU,QAAQ,QAAQ,EAAE;AAkDnD,IAAM,SAAS,IAAI;AAAA,EACjB;AAAA,EACA;AACF;AACA,QAAQ,IAAI,UAAU,MAAM;AAC5B,IAAMC,WAAQ;AAEd,IAAM,iBAAiB,IAAI,2BAAe,yBAAyB;AASnE,IAAMC,qBAAkB,CAAC,SAAO;AAC9B,QAAM,gBAAgB;AAAA,IACpB,KAAK,UAAU,IAAI;AAAA,EAAC;AACtB,SAAO;AACT;AAEO,IAAM,qBAAqB,MAAM;AACtC,QAAMC,gBAAe,CAAC,cAAc;AAClC,UAAM,kBAAkB,SAAS,cAAc,KAAK;AACpD,oBAAgB,KAAK;AACrB,oBAAgB,YAAY;AAC5B,oBAAgB,MAAM,WAAW;AACjC,oBAAgB,MAAM,SAAS;AAC/B,oBAAgB,MAAM,QAAQ;AAE9B,UAAM,iBAAiB,SAAS,cAAc,KAAK;AACnD,mBAAe,YAAY;AAE3B,UAAM,gBAAgB,SAAS,cAAc,KAAK;AAClD,kBAAc,YAAY;AAE1B,UAAMC,UAAS,SAAS,cAAc,QAAQ;AAC9C,IAAAA,QAAO,QAAQ;AACf,IAAAA,QAAO,SAAS;AAChB,IAAAA,QAAO,MAAM;AACb,IAAAA,QAAO,QAAQ;AACf,IAAAA,QAAO,MAAM,SAAS;AAGtB,kBAAc,YAAYA,OAAM;AAChC,mBAAe,YAAY,aAAa;AACxC,oBAAgB,YAAY,cAAc;AAG1C,aAAS,KAAK,YAAY,eAAe;AAAA,EAI3C;AAGA,QAAM,kBAAkB,CAAO,qBAAqB;AAClD,UAAM,oBAAoBF,mBAAkB,gBAAgB;AAC5D,UAAM,gBAAgB,GAAGD,QAAO,SAAS,iBAAiB;AAC1D,UAAMG,UAASD,cAAa,aAAa;AACzC,WAAO;AAAA,EACT;AAEA,QAAM,cAAc,CAAO,YAAY;AACrC,UAAM,oBAAoBD,mBAAkB,OAAO;AACnD,UAAM,gBAAgB,GAAGD,QAAO,gBAAgB,iBAAiB;AACjE,UAAMG,UAASD,cAAa,aAAa;AACzC,WAAO;AAAA,EACT;AAEA,QAAM,eAAe,CAAO,SAAS;AACnC,UAAM,oBAAoBD,mBAAkB,IAAI;AAChD,UAAM,gBAAgB,GAAGD,QAAO,SAAS,iBAAiB;AAC1D,UAAMG,UAASD,cAAa,aAAa;AACzC,WAAO;AAAA,EACT;AACA,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;AAoEO,IAAM,sBAAsB,MAAM;AACvC,QAAM,CAAC,kBAAkB,mBAAmB,QAAI,wBAAS,KAAK;AAC9D,+BAAU,MAAM;AAEd,UAAM,gBAAgB,CAAC,UAAkB;AACvC,aAAO,IAAI,gBAAgB,OAAO,SAAS,MAAM,EAAE,IAAI,KAAK;AAAA,IAC9D;AAGA,UAAM,aAAa,cAAc,UAAU,MAAM;AACjD,wBAAoB,UAAU;AAAA,EAChC,GAAG,CAAC,CAAC;AACL,SACE,6EACG,8BACC;AAAA,IAAC;AAAA;AAAA,MACC,KAAI;AAAA,MACJ,OAAM;AAAA,MACN,OAAO,EAAE,SAAS,OAAO;AAAA;AAAA,EAC3B,GAEJ;AAEJ;AAaA,IAAM,cAAc,CAAC,EAAE,UAAU,YAAY,QAAQ,MAAO,aAAa,MAAM;AAE7E,QAAM,CAAC,MAAM,OAAO,QAAI,wBAAS,MAAM;AACvC,QAAM,CAAC,UAAU,WAAW,QAAI,wBAAS,IAAI;AAC7C,QAAM,CAAC,aAAa,cAAc,QAAI,wBAAS,IAAI;AACnD,QAAM,CAAC,OAAO,QAAQ,QAAI,wBAAS,EAAE;AACrC,QAAM,CAAC,YAAY,aAAa,QAAI,wBAAS,KAAK;AAClD,QAAM,CAAC,YAAY,aAAa,QAAI,wBAAS,IAAI;AACjD,QAAM,CAAC,gBAAgB,iBAAiB,QAAI,wBAAS,KAAK;AAC1D,QAAM,CAAC,WAAW,YAAY,QAAI,wBAAiB;AACnD,QAAM,CAAC,WAAW,YAAY,QAAE,wBAAS;AACzC,QAAM,kBAAkB;AACxB,QAAM,CAAC,aAAa,cAAc,QAAI,wBAAiB;AACvD,QAAM,WAAW;AACjB,QAAM,CAAC,eAAe,gBAAgB,QAAI,wBAAiB,EAAE;AAC7D,QAAM,EAAC,QAAO,QAAI,2BAAW;AAC5B,+BAAU,MAAM;AACf,QAAI,CAAC,WAAW,UAAU;AACxB,cAAQ,IAAI,qCAAqC;AACjD,mBAAa,QAAQ,eAAe,MAAM;AAC1C,aAAO,SAAS,OAAO;AAAA,IACzB;AAAA,EACF,GAAG,CAAC,SAAS,QAAQ,CAAC;AAStB,+BAAU,MAAM;AACd,gBAAY,MAAM;AA3TtB;AA6TM,UAAI,aAAa,QAAQ,mBAAmB,MAAM,MAAM;AACtD,0BAAkB,KAAK;AACvB,qBAAY,UAAK,MAAM,aAAa,QAAQ,mBAAmB,CAAC,MAApD,mBAAuD,QAAQ;AAC3E,wBAAe,gBAAK,MAAM,aAAa,QAAQ,mBAAmB,CAAC,MAApD,mBAAuD,QAAvD,mBAA4D,OAAO;AAAA,MACpF,WAAU,aAAa,QAAQ,iBAAiB,MAAK,MAAK;AACxD,0BAAkB,KAAK;AACvB,cAAM,SAAS,aAAa,QAAQ,iBAAiB;AACrD,gBAAQ,IAAI,MAAM;AAAA,MACpB,OAAK;AACH,0BAAkB,IAAI;AAAA,MACxB;AAAA,IACF,GAAG,GAAG;AAAA,EACR,GAAG,CAAC,CAAC;AACL,+BAAU,MAAI;AACZ,gBAAY,MAAI;AACd,wBAAkB,IAAI;AAAA,IACxB,GAAE,GAAI;AAAA,EACR,GAAE,CAAC,CAAC;AAEJ,+BAAU,MAAI;AACZ,UAAM,OAAO,aAAa,QAAQ,cAAc;AAChD,mBAAe,IAAI;AACnB,iBAAa,OAAO,OAAO,MAAM;AAAA,EAEnC,GAAE,CAAC,QAAQ,CAAC;AAEZ,QAAM,WAAW;AAEjB,+BAAU,MAAI;AACZ,UAAM,gBAAgB,KAAK,KAAK,UAAU,EAAC,UAAU,aAAa,WAAW,UAAU,MAAM,aAAa,cAAc,SAAQ,CAAC,CAAC;AAClI,YAAQ,IAAI,eAAe,UAAS,aAAY,MAAK,WAAU,UAAU,cAAc,QAAQ;AAC/F,iBAAa,0BAA0B,aAAa,EAAE;AAAA,EAExD,GAAE,CAAC,QAAQ,CAAC;AAEZ,+BAAU,MAAM;AACd,YAAQ,IAAI,oBAAoB,SAAS;AAAA,EAC3C,GAAG,CAAC,SAAS,CAAC;AAEd,QAAM,qBAAqB;AAAA,IACzB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAEA,+BAAU,MAAM;AACd,YAAQ,IAAI,uBAAsB,UAAU,IAAI;AAChD,SAAG,qCAAU,UAAS,MAAK,6BAAM,UAAS,GAAE;AAC1C,uBAAiB,kCAAkC,QAAQ,aAAa,IAAI,YAAY,MAAM,eAAe,UAAU,EAAE;AAAA,IAC3H;AAAA,EACF,GAAE,CAAC,UAAU,IAAI,CAAC;AA8BlB,+BAAU,MAAM;AACd,UAAM,qBAAqB,CAAC,UAAU;AAEpC,YAAM,gBAAgB,SAAS,eAAe,YAAY;AAE1D,UAAI,iBAAiB,CAAC,cAAc,SAAS,MAAM,MAAM,GAAG;AAE1D,sBAAc,KAAK;AAAA,MACrB;AAAA,IACF;AAGA,aAAS,iBAAiB,aAAa,kBAAkB;AAGzD,WAAO,MAAM;AACX,eAAS,oBAAoB,aAAa,kBAAkB;AAAA,IAC9D;AAAA,EACF,GAAG,CAAC,CAAC;AAIL,SACE,6EAEE,wDAAC,mBAAW,UAAX,EAAoB,OAAO,oBAEzB;AAAA,KAAC,YAAY,kBAAiB,6CAAC,SAAI,WAAU,wGAC1C,uDAAC,YAAO,OAAM,OAAM,QAAO,OAAM,KAAK,eAAe,OAAM,6BAA2B,GACxF;AAAA,IACD,cACC,6CAAC,SAAI,IAAG,cAAa,WAAU,uEAC7B,wDAAC,SAAI,WAAU,qCACb;AAAA,mDAAC,SAAI,WAAU,wFAEb,uDAAC,SAAI,WAAU,kBAAiB,SAAS,MAAI;AAAC,sBAAc,KAAK;AAAA,MAAC,GAChE,uDAAC,6BAAiB,GAEpB,GACF;AAAA,MACA,6CAAC,SAAI,WAAU,mEACnB;AAAA,QAAC;AAAA;AAAA,UACD,OAAM;AAAA,UACN,QAAO;AAAA,UACP,KAAK;AAAA,UACL,OAAM;AAAA,UACN,OAAO,EAAE,iBAAiB,UAAU;AAAA;AAAA,MACpC,GACI;AAAA,OACF,GACF;AAAA,IAID,YAAY,CAAC,cACZ;AAAA,MAAC;AAAA;AAAA,QACC,WAAU;AAAA,QACV,SAAS,MAAM;AACb,wBAAc,CAAC,UAAU;AAAA,QAC3B;AAAA,QAEA,uDAAC,oBAAiB,SAAS,cAAc;AAAA;AAAA,IAE3C;AAAA,KAEJ,GAEF;AAEJ;AAGA,IAAO,cAAQ;","names":["import_react","import_jsx_runtime","import_react","iframe","import_react","authUrl","iframe","import_react","authUrl","import_react","import_jsx_runtime","authUrl","createEncodedData","createIframe","iframe"]}