import BackendService from "./index";
import { errorHandler } from "../utils/helper";
class IPFSService extends BackendService {
    constructor(apiUrl: string) {
        super(apiUrl);
    }

    async getKeyLinkShards(tID: string, SHA256ShadowHash: string) {
        console.log(this.triaAxios.getUri())
        try {
            const { data } = await this.triaAxios.get("/ipfs/getkeylink", {
                params: { tID: tID, SHA256ShadowHash: SHA256ShadowHash }
            })
            console.log(data)
            return data;
        } catch (err: unknown) {
            return errorHandler(err);
        }
    }
    async resolveName(ipfsName: string) {
        try {
            const { data: { data } } = await this.triaAxios.post("/ipfs/resolvename", {
                ipfsName: ipfsName
            }, {})
            return data;
        } catch (err: unknown) {
            return errorHandler(err);
        }
    }

    async fetchIPFSData(cid: string) {
        try {
            const { data: { data } } = await this.triaAxios.post("/ipfs/resolvecid", {
                cid: cid
            }, {})
            return data;
        } catch (err: unknown) {
            return errorHandler(err);
        }
    }

}

export default IPFSService;