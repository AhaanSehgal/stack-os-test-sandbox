import { TxnResponse, FeeResponse, SwapTargetResponse } from '../types';
import { SendPayload, SwapPayload, CheckTokenAllowance, ApprovePayload } from '../types/chain';
export interface Chain {
    getBalance(address: string, tokenAddress?: string): Promise<any>;
    getSendFee(fromAddress: string, recipientAddress: string, amount: number, tokenAddress?: string): Promise<FeeResponse>;
    send(sendPayload: SendPayload): Promise<TxnResponse>;
    checkTokenAllowance?({ accountAddress, tokenAddress, amount, }: CheckTokenAllowance): Promise<boolean>;
    getApproveFee?(fromAddress: string, tokenAddress: string, amount: number, contractAddress: string): Promise<FeeResponse>;
    approve?(approvePayload: ApprovePayload): Promise<TxnResponse>;
    getSwapTargets?(fromTokenAddress: string | null, listLength: number, query?: string): Promise<SwapTargetResponse[]>;
    getSwapFee?(fromAddress: string, fromTokenAddress: string, toTokenAddress: string, amount: number, slippage: number): Promise<FeeResponse>;
    swap?(swapPayload: SwapPayload): Promise<TxnResponse>;
}
