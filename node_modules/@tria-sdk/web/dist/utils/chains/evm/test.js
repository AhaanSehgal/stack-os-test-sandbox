"use strict";
// import { EVM } from '.';
// import { constants } from './utils/constants';
// const { chainId, rpcUrl } = constants.evm.polygon;
// const baseUrl = 'https://dev.tria.so';
// const evm = new EVM(baseUrl, chainId, rpcUrl, 'POLYGON');
// const mainPrivKey = '2b80b934ef1e92afebd6cfe8a6f2467e29245d5599d6512b0a6fd3b79594ccd3';
// async function test() {
//   console.log(
//     await evm.getBalance(
//       '0x1dE58d46D05a379e020b1cBED0Db98a2F55831B2',
//       // '0x4E37741d848B84D38c9287Bc75A4CD1d9e7FF1b0'
//       '0x2791bca1f2de4661ed88a30c99a7a9449aa84174' // USDC on POLYGON
//     )
//   );
//   // console.log(await evm.checkSendValidity('0x1a17Fc032e9e0500bc2C53a9c150dc353Da28018', 0.1));
//   // await evm.checkTokenAllowance({
//   //   accountAddress: '0x1a17Fc032e9e0500bc2C53a9c150dc353Da28018',
//   //   tokenAddress: '0x111111111117dc0aa78b770fa6a738034120c302',
//   //   amount: 0.01,
//   // });
//   // const swapTargets = await evm.getSwapTargets(20, 'usdt');
//   // console.log(swapTargets);
// }
// // test();
// async function testSend() {
//   const privateKey = mainPrivKey;
//   const fromAddress = '0xA0C308e5b949897fE7304BC7Ced0a58a58bb76E1'; //'0x1dE58d46D05a379e020b1cBED0Db98a2F55831B2';
//   const recipientAddress = '0x1dE58d46D05a379e020b1cBED0Db98a2F55831B2'; //'0x17F68d204BFe1F7ee6E9EF3C79A3086830388961';
//   const amount = 0.01; //0.0001;
//   const tokenAddress = ''; // '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174'; //'0xD67de0e0a0Fd7b15dC8348Bb9BE742F3c5850454';
//   const balance = await evm.getBalance(fromAddress, tokenAddress);
//   console.log({ balance });
//   const valid = await evm.checkSendValidity(fromAddress, amount, tokenAddress);
//   // return;
//   if (valid) {
//     const sendFee = await evm.getSendFee(fromAddress, recipientAddress, amount, tokenAddress);
//     console.log({ sendFee });
//     // const txn = await evm.send({ privateKey, fromAddress, tokenAddress, recipientAddress, amount });
//     // console.log(txn);
//   }
//   // const txn = await evm.send({
//   //   privateKey,
//   //   fromAddress,
//   //   recipientAddress,
//   //   amount,
//   //   tokenAddress,
//   // });
//   // console.log(txn);
//   return;
// }
// testSend();
// // async function testCreateWallet() {
// //   const mnemonic = 'casino couch drum steel engage can bonus voice avoid give fee view';
// //   const wallet = await evm.createWallet(mnemonic, 0);
// //   console.log({ wallet });
// //   return;
// // }
// const testOkxDex = async () => {
//   const privateKey = mainPrivKey;
//   const accountAddress = '0x1dE58d46D05a379e020b1cBED0Db98a2F55831B2';
//   const fromTokenAddress = '0xc946DAf81b08146B1C7A8Da2A851Ddf2B3EAaf85'; // USDC on OKT
//   const toTokenAddress = '0x382bB369d343125BfB2117af9c149795C6C65C50'; // USDT on OKT
//   const amount = 0.01;
//   const approved = await evm.checkTokenAllowance({
//     accountAddress,
//     tokenAddress: fromTokenAddress,
//     amount,
//   });
//   if (approved) {
//     console.log('approved...ready to swap');
//     const txn = await evm.swap({
//       privateKey,
//       fromAddress: accountAddress,
//       fromTokenAddress, // '0x831753DD7087CaC61aB5644b308642cc1c33Dc13', // QUICK
//       toTokenAddress,
//       amount,
//       slippage: 0.1, // 10% // 0.01 -> 1% on OKX
//     });
//     console.log(txn);
//   } else {
//     // approve
//     console.log('approving...');
//     const approveTxn = await evm.approve({ privateKey, tokenAddress: fromTokenAddress, amount });
//     console.log({ approveTxn });
//     await approveTxn?.data?.wait();
//   }
// };
// // testOkxDex();
// // DONE
// const test1inch = async () => {
//   const privateKey = mainPrivKey;
//   const accountAddress = '0x1dE58d46D05a379e020b1cBED0Db98a2F55831B2';
//   const fromTokenAddress = '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174'; // USDC
//   const toTokenAddress = '0xc2132D05D31c914a87C6611C10748AEb04B58e8F'; // USDT
//   const amount = 0.001;
//   const approved = await evm.checkTokenAllowance({
//     accountAddress,
//     tokenAddress: fromTokenAddress,
//     amount,
//   });
//   if (approved && false) {
//     console.log('approved...ready to swap');
//     const gasFee = await evm.getSwapFee(
//       accountAddress,
//       fromTokenAddress, // '0x831753DD7087CaC61aB5644b308642cc1c33Dc13', // QUICK
//       toTokenAddress,
//       amount,
//       0.1 // 0.1 -> 0.1% on 1inch
//     );
//     console.log(gasFee);
//     // const txn = await evm.swap({
//     //   privateKey,
//     //   fromAddress: accountAddress,
//     //   fromTokenAddress, // '0x831753DD7087CaC61aB5644b308642cc1c33Dc13', // QUICK
//     //   toTokenAddress,
//     //   amount,
//     //   slippage: 0.1, // 0.1 -> 0.1% on 1inch
//     // });
//     // console.log(txn);
//   } else {
//     // approve
//     console.log('approving...');
//     const approveFee = await evm.getApproveFee(accountAddress, toTokenAddress, amount);
//     console.log({ approveFee });
//     // const approveTxn = await evm.approve({ privateKey, tokenAddress: fromTokenAddress, amount });
//     // console.log({ approveTxn });
//     // await approveTxn?.data?.wait();
//   }
// };
// // test1inch();
