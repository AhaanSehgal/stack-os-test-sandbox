import axios from "axios";
import { coinGeckoChainIds, coinGeckoNativeTokenIds } from "./constants";

export const getTokenPrice =async (chainName: string, tokenAddress?: string) => {
    let tokenData;
    if(tokenAddress) tokenData = await getAssetPrice(chainName, tokenAddress)
    else tokenData = await getNativeTokenPrice(chainName)
    console.log({tokenData})
    return tokenData
}

const getAssetPrice =async (chainName:string, tokenAddress: string) => {
    try {
        const {data} = await axios({
            method: "GET",
            //@ts-ignore
            url: `https://api.coingecko.com/api/v3/simple/token_price/${coinGeckoChainIds[chainName]}`,
            params: {
                //@ts-ignore
                contract_addresses: tokenAddress,
                vs_currencies: "usd",
                include_24hr_change: true
            }
        });
        const tokenData = data?.[tokenAddress.toLowerCase()];
        if (tokenData && tokenData.usd) {
          return tokenData;
        } else {
          throw new Error('Failed to fetch token price');
        }
      } catch (error) {
        console.error(error);
        throw new Error('An error occurred while fetching token price.');
      }
    
    
}

const getNativeTokenPrice =async (chainName: string) => {
    try {
        const {data} = await axios({
            method: "GET",
            url: 'https://api.coingecko.com/api/v3/simple/price',
            params: {
                //@ts-ignore
                ids: coinGeckoNativeTokenIds[chainName],
                vs_currencies: "usd",
                include_24hr_change: true
            }
        });
        // @ts-ignore
        const tokenData = data?.[coinGeckoNativeTokenIds[chainName]];
        if (tokenData && tokenData.usd) {
          return tokenData;
        } else {
          throw new Error('Failed to fetch token price');
        }
      } catch (error) {
        console.error(error);
        throw new Error('An error occurred while fetching token price.');
      }
    
}

// getTokenPrice("POLYGON", "0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174")