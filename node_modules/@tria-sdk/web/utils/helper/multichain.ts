import { Chain } from '../../interfaces/chain';
import { WalletType } from '../../types';

import { EVM } from '../../utils/chains/evm/index';

type Chains = {
  [x: string]: Chain;
};

export class Multichain {
  public chains: Chains = {};
  public walletType: WalletType;

  constructor(baseUrl: string, walletType?: WalletType) {
    this.walletType = walletType as WalletType;
    /** all on 1inch for swap */
    // this.chains.SEPOLIA = new EVM(11155111, 'https://rpc.sepolia.org');
    this.chains.MUMBAI = new EVM(
      baseUrl,
      80001,
      'https://polygon-mumbai.blockpi.network/v1/rpc/public',
      'MUMBAI',
      walletType
    ); // for DID
    this.chains.ETH = new EVM(baseUrl, 1, 'https://eth.llamarpc.com', 'ETH', walletType);
    this.chains.POLYGON = new EVM(
      baseUrl,
      137,
      'https://polygon.llamarpc.com',
      'POLYGON',
      walletType
    );
    this.chains.AVALANCHE = new EVM(
      baseUrl,
      43114,
      'https://avalanche-c-chain.publicnode.com',
      'AVALANCHE',
      walletType
    ); // Avalanche C-chain
    this.chains.ARBITRUM = new EVM(
      baseUrl,
      42161,
      'https://arbitrum-one.publicnode.com',
      'ARBITRUM',
      walletType
    ); // Arbitrum One
    this.chains.BINANCE = new EVM(baseUrl, 56, 'https://bsc.publicnode.com', 'BINANCE', walletType);
    this.chains.OPTIMISM = new EVM(
      baseUrl,
      10,
      'https://optimism.meowrpc.com',
      'OPTIMISM',
      walletType
    );
    // this.chains.KLAYTN = new EVM(8217, 'https://klaytn.blockpi.network/v1/rpc/public');
    this.chains.FANTOM = new EVM(
      baseUrl,
      250,
      'https://fantom.publicnode.com',
      'FANTOM',
      walletType
    ); // Fantom Opera
    this.chains.GNOSIS = new EVM(
      baseUrl,
      100,
      'https://gnosis-mainnet.public.blastapi.io',
      'GNOSIS',
      walletType
    );
    /** */

    this.chains.CELO = new EVM(baseUrl, 42220, 'https://rpc.ankr.com/celo', 'CELO', walletType); // not on 1inch for swap
    this.chains.OKX = new EVM(baseUrl, 66, 'https://exchainrpc.okex.org', 'OKX', walletType); // OKX DEX
    this.chains.FUSE = new EVM(baseUrl, 122, 'https://rpc.fuse.io/', 'FUSE', walletType);
  }
}
