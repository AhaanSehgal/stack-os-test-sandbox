import { create } from 'ipfs-http-client';
//@ts-ignore
import { Buffer } from '../core-lib/buffer';
const projectId = '2QHLy82BKrUCe0bF5KfzCpoMzvO';
const projectSecret = 'f9a453b42bda2e70d09ea90086b83378';
const auth = 'Basic ' + Buffer.from(projectId + ':' + projectSecret).toString('base64');

const client = create({
    host: 'ipfs.infura.io',
    port: 5001,
    protocol: 'https',
    headers: {
        authorization: auth,
    },
});


export async function pinToIpfs(data: string): Promise<string> {
    const res = await client.add(data, { cidVersion: 1, pin: true });
    return res.path;
}

export const fetchContent = async (path: string): Promise<string> => {
    const content = [];
    for await (const chunk of client.cat(path)) {
        content.push(chunk);
    }
    return Buffer.concat(content).toString();
};
