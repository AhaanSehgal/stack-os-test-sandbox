import axios from 'axios';
import { DidDataResponse } from './types';
import { ENV, GetAllAddressesResponse } from '../../types';
import { getSubgraphUrl } from '../constants';
export const getAddresses = async (triaName, environment) => {
    try {
        console.log('DID resolving..');
        var data = JSON.stringify({
            query: `query MyQuery($id: ID!, $didName: String!) {
              didToEvmAddress(id: $id) {
                did
                evmAddress
              }
              didToNonEvmAddresses(where: {did: $didName}) {
                did
                nonEvmAddress
                chain {
                  id
                  chainName
                }
              }
            }`,
            variables: { id: triaName, didName: triaName },
        });
        var config = {
            method: 'post',
            url: getSubgraphUrl(environment),
            headers: {
                'Content-Type': 'application/json',
            },
            data: data,
        };
        const { data: { data: didData }, } = await axios(config);
        if (didData)
            return { success: true, data: didData };
        else
            return { success: false, data: null, message: 'DID does not exist' };
    }
    catch (err) {
        throw err;
    }
};
//# sourceMappingURL=index.js.map