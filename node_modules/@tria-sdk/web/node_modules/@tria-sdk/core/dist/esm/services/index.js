import axios from 'axios';
class BackendService {
    constructor(apiUrl) {
        this.triaAxios = axios.create({
            baseURL: `${apiUrl}/api/v2/`,
            withCredentials: true,
        });
        this.triaAxios.interceptors.request.use((config) => {
            console.log('Request made with', config);
            return config;
        }, (error) => {
            console.error('Request error:', error);
            return Promise.reject(error);
        });
        this.triaAxios.interceptors.response.use((response) => {
            console.log('intercepting responseee');
            if (response.status === 401) {
                console.log('intercepting 401 response');
                const unauthorizedEvent = new Event('unauthorized');
                window.dispatchEvent(unauthorizedEvent);
            }
            else {
                console.error('Non-200 status code:', response.status);
            }
            return response;
        }, (error) => {
            if (error.response) {
                console.error('Response error with status:', error.response.status);
            }
            else if (error.request) {
                console.error('No response was received:', error.request);
            }
            else {
                console.error('Error setting up the request:', error.message);
            }
            return Promise.reject(error);
        });
    }
}
export default BackendService;
//# sourceMappingURL=index.js.map