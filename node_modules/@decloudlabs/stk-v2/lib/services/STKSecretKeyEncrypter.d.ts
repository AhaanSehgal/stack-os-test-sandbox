import { APICallReturn } from "../types/types";
import STKETHKeyEncrypter from "./STKETHKeyEncrypter";
import * as sigUtil from "@metamask/eth-sig-util";
export default class STKSecretKeyEncrypter extends STKETHKeyEncrypter {
    secretKey: string;
    constructor(secretKey: string);
    encrypt(data: string): Promise<APICallReturn<Uint8Array>>;
    encryptWithPublicKey(data: string, publicKey: string): Promise<APICallReturn<Uint8Array>>;
    getEncryptionPublicKey(): Promise<APICallReturn<string>>;
    decrypt(data: Uint8Array): Promise<APICallReturn<string>>;
    sign(newTypedMessage: sigUtil.TypedMessage<sigUtil.MessageTypes>): Promise<APICallReturn<{
        signature: string;
    }>>;
}
